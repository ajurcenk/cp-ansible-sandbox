all:
   vars:
      security_mode: plaintext
      confluent:
         support:
            metrics_enabled: false
            customer_id: ""
         repo_version: 5.3
         package_version: 5.3.1-1 #5.3.0-1
      install_java: true #Disable if you wish to get Java from elsewhere
      jolokia_enabled: false #Disables Jolokia download/install
      jolokia_jar_path: /opt/jolokia/jolokia.jar #Needed regardless of Jolokia being enabled
      kerberos: #Even though we aren't using Kerberos. We currently have to define this.
         keytab_dir: /etc/security/keytabs
      open_file_limit: 100000 #Sets file limits for everything
      zookeeper:
         properties:
            clientPort: 2181
         
preflight:
   hosts:
      zk[1:3].confluent.nerdynick.net:
      kfk[1:3].confluent.nerdynick.net:
      ccc1.confluent.nerdynick.net:
      con1.confluent.nerdynick.net:
      sr1.confluent.nerdynick.net:
      ksql1.confluent.nerdynick.net:
      rest1.confluent.nerdynick.net:
      
zookeeper:
   hosts:
      zk[1:3].confluent.nerdynick.net:
   vars:
      zookeeper_jolokia_port: 7770
         
kafka_broker:
   hosts:
      kfk1.confluent.nerdynick.net:
         broker_id: 1
      kfk2.confluent.nerdynick.net:
         broker_id: 2
      kfk3.confluent.nerdynick.net:
         broker_id: 3
   vars:
      kafka_broker_jolokia_port: 7771 #Needed regardless of Jolokia being enabled
      kafka_port: 9092
      kafka_broker:
         properties:
            num.partitions: 3
            min.insync.replicas: 2
            log.retention.hours: 3 #Adjust to desired value. Set low for test envs.
            default.replication.factor: 3
            #MetricsReport Specific Configs
            confluent.metrics.reporter.topic.partitions: 12
            confluent.metrics.reporter.topic.replicas: 3
            confluent.metrics.reporter.topic.retention.ms: 10800000 #Adjust to desired value. Set low for test envs. 
            
control_center:
   hosts:
      ccc1.confluent.nerdynick.net:
   vars:
      kafka_port: 9092
      control_center:
         properties:
            confluent.controlcenter.ksql.enable: 'true' #Set to false if no KSQL Servers
            confluent.controlcenter.schema.registry.enable: 'true' # Set to false if no Schema Registry
            #Kafka Connect Related Properties
            confluent.controlcenter.connect.default.cluster: "{% for host in groups['kafka_connect'] %}{% if loop.index > 1%},{% endif %}http://{{ host }}:8083{% endfor %}"
                  
kafka_connect:
   hosts:
      con1.confluent.nerdynick.net:
   vars:
      kafka_connect_jolokia_port: 7773 #Needed regardless of Jolokia being enabled
      kafka_port: 9092
      kafka:
         connect:
            distributed:
               config:
                  bootstrap.servers: "{% for host in groups['kafka_broker'] %}{% if loop.index > 1%},{% endif %}{{ host }}:9092{% endfor %}"
                  key.converter: org.apache.kafka.connect.json.JsonConverter
                  value.converter: org.apache.kafka.connect.json.JsonConverter
                  
schema_registry:
   hosts:
      sr1.confluent.nerdynick.net:
   vars:
      schema_registry_jolokia_port: 7772
      kafka_port: 9092
      schema_registry_listener_port: 8081 #Optional
      
ksql:
   hosts:
      ksql1.confluent.nerdynick.net:
   vars:
      ksql_jolokia_port: 7774 #Needed regardless of Jolokia being enabled
      kafka_port: 9092
      ksql_listener_port: 8088 #Optional
      
kafka_rest:
   hosts:
      rest1.confluent.nerdynick.net:
   vars:
      kafka_rest_jolokia_port: 7775 #Needed regardless of Jolokia being enabled
      kafka_port: 9092